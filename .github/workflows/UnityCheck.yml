name: Actions

on:
  pull_request: {}
  push: { branches: [master] }

env:
  CODECOV_TOKEN: '2f2eb890-30e2-4724-83eb-7633832cf0de'

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: yarn
      - run: yarn lint
      - run: yarn test --coverage
      - run: bash <(curl -s https://codecov.io/bash)
      - run: yarn build || { echo "build command should always succeed" ; exit 61; }
      - run: yarn build --quiet && git diff --quiet action || { echo "action should be auto generated" ; git diff action ; exit 62; }

  buildForAllPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Project E
        unityVersion:
          - 2019.2.11f1
          - 2019.3.15f1
        include:
          # Please be polite; don't copy my personal licenses.
          # These are here because they are needed to allowing pull requests from forks to unity-builder.
          # You should be using ${{ secrets.UNITY_LICENSE_2019_3_15 }} here.
          - unityVersion: 2019.2.11f1
            license: ${{ secrets.UNITY_LICENSE_2019_3_15 }}
          - unityVersion: 2019.3.15f1
            license: ${{ secrets.UNITY_LICENSE_2019_3_15 }}
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          - Android # Build an Android .apk.
          #          - StandaloneWindows # Build a Windows standalone.
          #          - WebGL # WebGL.
          #          - WSAPlayer # Build an Windows Store Apps player.
          #          - PS4 # Build a PS4 Standalone.
          #          - XboxOne # Build a Xbox One Standalone.
          #          - tvOS # Build to Apple's tvOS platform.
          #          - Switch # Build a Nintendo Switch player.

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: ./
        env:
          UNITY_LICENSE: ${{ matrix.license }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: -profile SomeProfile -someBoolean -someValue exampleValue
      - uses: actions/upload-artifact@v1
        with:
          name: Build (${{ matrix.unityVersion }})
          path: build
